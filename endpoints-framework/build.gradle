/*
 * Copyright 2016 Google Inc. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
plugins {
  id 'java-library'
}

configurations {
  include
  compileOnly.extendsFrom include
}

jar {
  from {
    configurations.include.collect { it.isDirectory() ? it : zipTree(it) }
  }
}

def annotations = [
    "AnnotationBoolean.java",
    "Api.java",
    "ApiAuth.java",
    "ApiCacheControl.java",
    "ApiClass.java",
    "ApiFrontendLimitRule.java",
    "ApiFrontendLimits.java",
    "ApiIssuer.java",
    "ApiIssuerAudience.java",
    "ApiMethod.java",
    "ApiMethodCacheControl.java",
    "ApiNamespace.java",
    "ApiReference.java",
    "ApiResourceProperty.java",
    "ApiTransformer.java",
    "Authenticator.java",
    "DefaultValue.java",
    "AuthLevel.java",
    "Transformer.java",
]

def apiTypes = [
    "DataAndTime.java",
    "SimpleData.java",
]

// Generates a Javadoc for types meant to be used by API producers
task siteJavadoc(type: Javadoc) {
  source = annotations.collect({ "src/main/java/com/google/api/server/spi/config/${it}" }) +
      apiTypes.collect({ "src/main/java/com/google/api/server/spi/types" })
  destinationDir = file("${project.docsDir}/site-docs")
}

configureMaven(project, 'Endpoints Framework', 'A framework for building RESTful web APIs.')

task copyTestResources(type: Copy) {
  from "${projectDir}/src/test/resources"
  into "${buildDir}/classes/test"
}
processTestResources.dependsOn copyTestResources

dependencies {
  include(project(":discovery-client"))  {
    // We already include all of the dependencies needed for the discovery
    // client, and they are often newer versions. Leaving this out can cause
    // Android Studio to confuse different versions of Jackson 2 and Guava,
    // leading to test failures.
    transitive = false
  }
  api (group: 'com.google.guava', name: 'guava', version: guavaVersion) { force = true }
  api (group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: jacksonVersion)
  api (group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: jacksonVersion)
  api (group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: jacksonVersion)
  api group: 'com.fasterxml.jackson.module', name: 'jackson-module-parameter-names', version: jacksonVersion
  api group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jdk8', version: jacksonVersion
  api group: 'com.google.appengine', name: 'appengine-api-1.0-sdk', version: appengineVersion
  api group: 'com.google.flogger', name: 'flogger', version: floggerVersion
  implementation group: 'com.google.flogger', name: 'flogger-system-backend', version: floggerVersion
  api(group: 'com.google.http-client', name: 'google-http-client-jackson2', version: httpClientVersion) {
    exclude group: 'com.fasterxml.jackson.core', module: 'jackson-core'
  }
  api(group: 'com.google.api-client', name: 'google-api-client', version: apiclientVersion)
  api(group: 'com.google.api-client', name: 'google-api-client-appengine', version: apiclientVersion)
  compileOnly group: 'com.google.code.findbugs', name: 'jsr305', version: findbugsVersion
  api group: 'commons-fileupload', name: 'commons-fileupload', version: fileUploadVersion
  api group: 'io.swagger', name: 'swagger-models', version: swaggerVersion
  api(group: 'io.swagger', name: 'swagger-core', version: swaggerVersion) {
    exclude group: 'javax.validation', module: 'validation-api'
  }
  compileOnly group: 'org.slf4j', name: 'slf4j-nop', version: slf4jVersion

  compileOnly group: 'javax.servlet', name: 'servlet-api', version: "2.5"
  compileOnly group: 'com.google.auto.value', name: 'auto-value-annotations', version: autoValueVersion
  annotationProcessor group: 'com.google.auto.value', name: 'auto-value', version: "1.8.2"

  api group: 'org.hibernate.validator', name: 'hibernate-validator', version: hibernateValidatorVersion
  api group: 'jakarta.validation', name: 'jakarta.validation-api', version: validationApiVersion

  testImplementation project(':test-utils')
  testImplementation project(':discovery-client')
  testImplementation group: 'junit', name: 'junit', version: junitVersion
  testImplementation group: 'org.mockito', name: 'mockito-core', version: mockitoVersion
  testImplementation group: 'org.skyscreamer', name: 'jsonassert', version: jsonassertVersion
  testImplementation group: 'com.google.truth', name: 'truth', version: truthVersion
  testImplementation group: 'com.google.appengine', name: 'appengine-testing', version: appengineVersion
  testImplementation group: 'com.google.appengine', name: 'appengine-api-stubs', version: appengineVersion
  testImplementation group: 'org.springframework', name: 'spring-test', version: springtestVersion
  testImplementation group: 'com.google.guava', name: 'guava-testlib', version: guavaVersion
  testImplementation (group: 'io.swagger', name: 'swagger-validator', version: '1.0.7') {
    exclude group: 'javax.servlet', module: 'javax.servlet-api'
    exclude group: 'ch.qos.logback', module: 'logback-classic'
  }
}

