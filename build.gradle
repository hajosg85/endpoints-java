/*
 * Copyright 2016 Google Inc. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

project.ext {
  servletVersion="2.5"
}

subprojects {
  apply plugin: 'java'
  apply plugin: 'jacoco'

  repositories {
    mavenCentral()
    mavenLocal()
  }

  compileJava {
    // Workaround to actually apply project compatibility
    sourceCompatibility = project.sourceCompatibility
    targetCompatibility = project.targetCompatibility
    options.encoding = 'UTF-8'
  }

  compileTestJava {
    // Workaround to actually apply project compatibility
    sourceCompatibility = project.sourceCompatibility
    targetCompatibility = project.targetCompatibility
    options.encoding = 'UTF-8'
    //required for com.google.api.server.spi.ObjectMapperUtilTest
    //this need to be configured manually for the module in IntelliJ at:
    //File | Settings | Build, Execution, Deployment | Compiler | Java Compiler
    options.compilerArgs << '-parameters'
  }

  test {
    testLogging {
      exceptionFormat = 'full'
    }
  }

  jacocoTestReport {
    reports {
      xml.required = true
    }
  }
}

// Common Maven artifact configuration. Called by subprojects which need it.
def configureMaven(project, projectName, projectDescription) {
  def ossrhUsername = project.findProperty('ossrhUsername')
  def ossrhPassword = project.findProperty('ossrhPassword')
  configure(project) {
    apply plugin: 'java-library'
    apply plugin: 'maven-publish'
    apply plugin: 'signing'

    java {
      withJavadocJar()
      withSourcesJar()
    }

    publishing {
      repositories {
        maven {
          def releasesRepoUrl = "https://aodocs.jfrog.io/aodocs/aodocs-java-release/"
          def snapshotsRepoUrl = "https://aodocs.jfrog.io/aodocs/aodocs-java-snapshot/"
          url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
          credentials {
            username = ossrhUsername
            password = ossrhPassword
          }
        }
      }
      publications  {
        mavenJava(MavenPublication) {
          from components.java
          pom {
            name = projectName
            description = projectDescription
            packaging = 'jar'
            url = 'https://cloud.google.com/endpoints/docs/frameworks/java'

            scm {
              connection = 'scm:git:https://github.com/AODocs/endpoints-java.git'
              developerConnection = 'scm:git:https://github.com/AODocs/endpoints-java.git'
              url = 'scm:git:https://github.com/AODocs/endpoints-java.git'
            }

            licenses {
              license {
                name = 'The Apache License, Version 2.0'
                url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
              }
            }

            developers {
              developer {
                id = 'tangd'
                name = 'Daniel Tang'
                email = 'tangd@google.com'
              }
            }
          }
        }
      }
    }

    signing {
      required { gradle.taskGraph.hasTask('publish') }
      sign publishing.publications.mavenJava
    }
  }
}
